---
title: "Day1"
format: html
editor: visual
---

My very first attempts at using the package.

```{r}
library(aRt)
library(ggplot2)

crawling()
n<-90
crawling(n,node_colour = rep(c("deeppink","limegreen"),times=n*1.5))+coord_fixed(0.5)

crawling_alt<-function (#minor change to aspect ratio and experimentation with algo
    n = 50, 
    edge_colour = "black", 
    node_size = 1, 
    node_colour = "black", 
    bg_col = "white", 
    s = 1234) 
{
  set.seed(s)
  x <- c(
    stats::rnorm(n, 25, 25), 
    stats::rnorm(n, 50, 25), 
    stats::rnorm(n, 75, 25))
  y <- c(
    stats::rnorm(n, 25, 25), 
    stats::rnorm(n, 50, 25), 
    stats::rnorm(n, 75, 25))
  d <- data.frame(x, y)
  dg <- stats::hclust(stats::dist(d))
  phylo_tree <- ape::as.phylo(dg)
  graph_edges <- phylo_tree$edge
  graph_net <- igraph::graph.edgelist(graph_edges)
  
  p <- ggraph::ggraph(
    graph_net, 
    "igraph", 
    algorithm = "circle", 
    #circular = TRUE
    ) + 
    ggraph::geom_edge_diagonal(colour = edge_colour) + 
    ggraph::geom_node_point(
      ggplot2::aes(
        filter = igraph::degree(
          graph_net, mode = "out"
        ) == 0
      ), 
      color = node_colour, 
      size = node_size) + 
    ggplot2::coord_fixed(0.25) + 
    ggplot2::theme(
      panel.background = ggplot2::element_rect(
        fill = bg_col, 
        colour = bg_col
      ), 
      plot.background = ggplot2::element_rect(
        fill = bg_col, 
        colour = bg_col
      ), 
      plot.title = ggplot2::element_blank(), 
      plot.subtitle = ggplot2::element_blank(), 
      legend.position = "none", 
      plot.margin = ggplot2::unit(c(0, 0, 0, 0), "cm"), 
      axis.title.x = ggplot2::element_blank(), 
      axis.title.y = ggplot2::element_blank(), 
      axis.text.x = ggplot2::element_blank(), 
      axis.text.y = ggplot2::element_blank(), 
      axis.ticks.x = ggplot2::element_blank(), 
      axis.ticks.y = ggplot2::element_blank(), 
      panel.grid.major = ggplot2::element_blank(), 
      panel.grid.minor = ggplot2::element_blank()
    )
    p
}

n<-70 #for ocnvenience
crawling_alt(
  n,
  #node_colour = rep(c("deeppink","black"),times=n*1.5),
  node_colour = "deeppink",
  edge_colour = c("darkgreen"),
  bg_col = "white"
  )
```

```{r,message=FALSE,warning=FALSE,error=FALSE}
n<-16
spiro(
  n_x=n,
  n_y=n*0.25,
  bg_col = "black",
  s=13,
  d=2,
  R=1,
  r=4,
  col_palette = c("deeppink","limegreen","white")
)
```

```{r}
chaos_alt<-function (
    n_lines = 75, 
    n_points = 10, 
    n_circles = 20, 
    line_col = "grey70", 
    point_col = "black", 
    circle_col = "white", 
    circle_line_col = "black", 
    bg_col = "white", 
    min_circle = 0.01, 
    max_circle = 0.1, 
    linewidth = 0.2, 
    alpha = 0.5, 
    size = 0.3, 
    s = 1234) 
{
    set.seed(s)
    line_data <- tibble::tibble(
      x1 = 4*stats::runif(n_lines), 
      y1 = stats::runif(n_lines), 
      x2 = 4*stats::runif(n_lines), 
      y2 = stats::runif(n_lines), 
      grp = seq_len(n_lines))
    point_data <- tibble::tibble(
      x = 4*stats::runif(n_points), 
      y = stats::runif(n_points))
    circle_data <- tibble::tibble(
      x0 = 4*stats::runif(n_circles), 
      y0 = stats::runif(n_circles), 
      r = stats::runif(n_circles, min_circle, max_circle))
    
    p <- ggplot2::ggplot() +
      ggplot2::coord_fixed() + 
      ggplot2::geom_segment(
        data = line_data, 
        mapping = ggplot2::aes(
          x = .data$x1, 
          y = .data$y1, 
          xend = .data$x2, 
          yend = .data$y2, 
          group = .data$grp
          ), 
        linewidth = linewidth, 
        colour = line_col) + 
      ggforce::geom_circle(
        data = circle_data, 
        mapping = ggplot2::aes(
          x0 = .data$x0, 
          y0 = .data$y0, 
          r = .data$r), 
        fill = circle_col, 
        alpha = alpha, 
        linewidth = linewidth, 
        colour = circle_line_col) + 
            ggplot2::geom_point(
        data = point_data, 
        mapping = ggplot2::aes(
          x = .data$x, 
          y = .data$y), 
        size = size, 
        shape = 15,
        colour = point_col)+
      ggplot2::theme_void() + 
      ggplot2::theme(plot.background = ggplot2::element_rect(colour = bg_col, 
        fill = bg_col), panel.background = ggplot2::element_rect(colour = bg_col, 
        fill = bg_col), plot.margin = ggplot2::margin(5, 5, 5, 
        5))
    return(p)
}

```
